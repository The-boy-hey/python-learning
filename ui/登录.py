# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '登录.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
import register
import pymysql
import qdarkstyle
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow
import 注册

class Ui_MainWindow(QMainWindow):                   #该五行均需要粘贴
    # __init__:当前类的构造方法
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.ut = 0
        self.setupUi(self)


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(700, 466)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(260, 20, 500, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("")
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(250, 120, 200, 40))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(250, 180, 200, 40))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(160, 120, 60, 40))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(160, 180, 61, 40))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.radioButton = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(190, 240, 86, 41))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_2.setGeometry(QtCore.QRect(420, 240, 92, 41))
        self.radioButton_2.setObjectName("radioButton_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(290, 290, 100, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 617, 22))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.actionzhuce = QtWidgets.QAction(MainWindow)
        self.actionzhuce.setObjectName("actionzhuce")

        self.actionqiyexinxi = QtWidgets.QAction(MainWindow)
        self.actionqiyexinxi.setObjectName("actionqiyexinxi")

        self.actionbangzhu = QtWidgets.QAction(MainWindow)
        self.actionbangzhu.setObjectName("actionbangzhu")

        self.actionbangzhu_2 = QtWidgets.QAction(MainWindow)
        self.actionbangzhu_2.setObjectName("actionbangzhu_2")

        self.menu.addAction(self.actionzhuce)
        self.menu.addAction(self.actionqiyexinxi)
        self.menu.addAction(self.actionbangzhu)
        self.menu.addAction(self.actionbangzhu_2)

        self.menubar.addAction(self.menu.menuAction())
        #事件绑定
        self.pushButton.clicked.connect(self.login)
        self.radioButton.toggled.connect(self.usertype)
        self.radioButton_2.toggled.connect(self.usertype)
        self.actionzhuce.triggered.connect(self.regist_user)      #该七行是新添加的
        self.actionqiyexinxi.triggered.connect(self.flush)
        self.actionbangzhu.triggered.connect(self.flush)
        self.actionbangzhu_2.triggered.connect(self.quit_sys)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "用户登录"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "请输入用户名"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "请输入密码"))
        self.label_2.setText(_translate("MainWindow", "用户名："))
        self.label_3.setText(_translate("MainWindow", "密码："))
        self.radioButton.setText(_translate("MainWindow", "管理员"))
        self.radioButton_2.setText(_translate("MainWindow", "普通用户"))
        self.pushButton.setText(_translate("MainWindow", "登录"))
        self.menu.setTitle(_translate("MainWindow", "菜单栏"))
        self.actionzhuce.setText(_translate("MainWindow", "注册"))
        self.actionqieyexinxi.setText(_translate("MainWindow", "企业信息"))
        self.actionbangzhu.setText(_translate("MainWindow", "退出系统"))
        self.actionbangzhu_2.setText(_translate("MainWindow", "帮助"))
        
    def login(self):
        user = self.lineEdit.text()            # 获取文本输入框中的内容
        pwd = self.lineEdit_2.text()             # 获取密码输入框中内容
        self.usertype()             # 获取选择的管理员还是普通用户
        print(self.ut)
        if (user == "" or pwd == ""):           # 判断用户名或密码是否为空
            # 弹出对应的对话框，
            """
            QMessageBox.warning ：弹出对应的警告框
            QMessageBox.Yes, ：警告对话框中的按钮，如果两个值一样则只显示一个确定按钮，
            QMessageBox.No  :警告对话框中的取消按钮
            """
            print(QMessageBox.warning(self, "警告", "用户名和密码不可为空!", QMessageBox.Yes, QMessageBox.Yes))
            return
        try:
            self.db = pymysql.connect(host='localhost',port=3306,user="root",password='root',database='total',charset='utf8')
        except:
            QMessageBox.warning(self, '警告', "连接数据库故障", QMessageBox.Yes)
            self.db.rollback()
        if self.ut == 1:#管理员用户
            sql = 'select * from manager where user_name="%s and user_pwd=%s"'  # sql指令语句
            cur = self.db.cursor()  # 获取游标
            cur.execute(sql,(user,pwd))  # 执行sql语句
            results = cur.fetchall()  # 通过fetchall获取数据
            print('results:',results)
            self.hide()         # 如果登录成功当前登录窗口隐藏
            #转入主界面
            self.libs = 注册.Ui_MainWindow()
            self.libs.show()                                                                                        #注意数据库中的名字

        else:#普通用户
            sql = 'select * from consumer where user_name="%s"' % user  # sql指令语句
            cur = self.db.cursor()  # 获取游标
            cur.execute(sql)  # 执行sql语句
            results = cur.fetchall()  # 通过fetchall获取数据
            print('results:', results)
            self.hide()
            # 转入主界面
            self.libs = 注册.Ui_MainWindow()
            self.libs.show()
            
    def regist_user(self):
        self.hide()  # 主界面的隐藏
        self.regist = 注册.Ui_MainWindow()
        #注册界面打开
        self.regist.show()
        
    def flush(self):
        self.lineEdit.clear()
        self.lineEdit_2.clear()
        if self.ut == 0:
            self.radioButton.setChecked(True)

if __name__ == '__main__':
    from PyQt5.Qt import *
    app = QtWidgets.QApplication(sys.argv) # 创建一个应用程序
    app.setStyleSheet(qdarkstyle.load_stylesheet_pyqt5())
    ui1 = Ui_MainWindow()    # 创建设计好的窗口对象
    ui1.show()
    sys.exit(app.exec_())